{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useContext } from \"react\";\nimport axios from \"axios\";\nexport const useRide = () => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const requestRide = async rideData => {\n    setLoading(true);\n    setError(null);\n    try {\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        throw new Error(\"Please login to book a ride\");\n      }\n      const response = await axios.post(`${process.env.REACT_APP_API_URL}/api/rides`, rideData, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.data) {\n        console.log(\"Ride booked successfully:\", response.data);\n        return true;\n      }\n      return false;\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error(\"Booking error:\", error);\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Failed to request ride\");\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n  return {\n    requestRide,\n    loading,\n    error\n  };\n};\n_s(useRide, \"Iz3ozxQ+abMaAIcGIvU8cKUcBeo=\");","map":{"version":3,"names":["useState","useContext","axios","useRide","_s","loading","setLoading","error","setError","requestRide","rideData","token","localStorage","getItem","Error","response","post","process","env","REACT_APP_API_URL","headers","Authorization","data","console","log","_error$response","_error$response$data","message"],"sources":["C:/Users/SIDDH/Desktop/Novaride/src/hooks/useRide.js"],"sourcesContent":["import { useState, useContext } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport const useRide = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const requestRide = async (rideData) => {\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      if (!token) {\r\n        throw new Error(\"Please login to book a ride\");\r\n      }\r\n\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/api/rides`,\r\n        rideData,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n\r\n      if (response.data) {\r\n        console.log(\"Ride booked successfully:\", response.data);\r\n        return true;\r\n      }\r\n      return false;\r\n    } catch (error) {\r\n      console.error(\"Booking error:\", error);\r\n      setError(error.response?.data?.message || \"Failed to request ride\");\r\n      return false;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return {\r\n    requestRide,\r\n    loading,\r\n    error,\r\n  };\r\n};\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAC5C,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMS,WAAW,GAAG,MAAOC,QAAQ,IAAK;IACtCJ,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACF,MAAMG,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAI,CAACF,KAAK,EAAE;QACV,MAAM,IAAIG,KAAK,CAAC,6BAA6B,CAAC;MAChD;MAEA,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,IAAI,CAC/B,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,YAAY,EAC5CT,QAAQ,EACR;QACEU,OAAO,EAAE;UACPC,aAAa,EAAE,UAAUV,KAAK;QAChC;MACF,CACF,CAAC;MAED,IAAII,QAAQ,CAACO,IAAI,EAAE;QACjBC,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAET,QAAQ,CAACO,IAAI,CAAC;QACvD,OAAO,IAAI;MACb;MACA,OAAO,KAAK;IACd,CAAC,CAAC,OAAOf,KAAK,EAAE;MAAA,IAAAkB,eAAA,EAAAC,oBAAA;MACdH,OAAO,CAAChB,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;MACtCC,QAAQ,CAAC,EAAAiB,eAAA,GAAAlB,KAAK,CAACQ,QAAQ,cAAAU,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBH,IAAI,cAAAI,oBAAA,uBAApBA,oBAAA,CAAsBC,OAAO,KAAI,wBAAwB,CAAC;MACnE,OAAO,KAAK;IACd,CAAC,SAAS;MACRrB,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,OAAO;IACLG,WAAW;IACXJ,OAAO;IACPE;EACF,CAAC;AACH,CAAC;AAACH,EAAA,CA3CWD,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}