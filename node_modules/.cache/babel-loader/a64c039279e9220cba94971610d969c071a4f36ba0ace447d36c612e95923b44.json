{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SIDDH\\\\Desktop\\\\Novaride\\\\src\\\\context\\\\RideContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport { AuthContext } from \"./AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const RideContext = /*#__PURE__*/createContext();\nexport const RideProvider = ({\n  children\n}) => {\n  _s();\n  const {\n    user\n  } = useContext(AuthContext);\n  const [currentRide, setCurrentRide] = useState(null);\n  const [selectedDriver, setSelectedDriver] = useState(null);\n  const [paymentStatus, setPaymentStatus] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const requestRide = async rideData => {\n    setLoading(true);\n    try {\n      const response = await axios.post(`${process.env.REACT_APP_API_URL}/api/rides`, rideData, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setCurrentRide(response.data);\n      return true;\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Failed to request ride\");\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const cancelRide = async rideId => {\n    try {\n      setLoading(true);\n      const token = localStorage.getItem(\"token\");\n      const config = {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      };\n      await axios.put(`${process.env.REACT_APP_API_URL}/api/rides/${rideId}/cancel`, {}, config);\n      setCurrentRide(null);\n      setError(null);\n      return true;\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || \"Failed to cancel ride\");\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const completeRide = async (rideId, rating, feedback) => {\n    try {\n      setLoading(true);\n      const token = localStorage.getItem(\"token\");\n      const config = {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      };\n      await axios.put(`${process.env.REACT_APP_API_URL}/api/rides/${rideId}/complete`, {\n        rating,\n        feedback\n      }, config);\n      setCurrentRide(null);\n      setError(null);\n      return true;\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || \"Failed to complete ride\");\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const getRideHistory = async () => {\n    try {\n      setLoading(true);\n      const token = localStorage.getItem(\"token\");\n      const config = {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      };\n      const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/rides/history`, config);\n      setError(null);\n      return res.data;\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      setError(((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.message) || \"Failed to fetch ride history\");\n      return [];\n    } finally {\n      setLoading(false);\n    }\n  };\n  const findDriver = async location => {\n    setLoading(true);\n    try {\n      // Simulate API call to find nearby drivers\n      await new Promise(resolve => setTimeout(resolve, 2000));\n      const driver = {\n        id: 1,\n        name: \"Michael Smith\",\n        rating: 4.8,\n        car: \"Toyota Camry\",\n        plate: \"ABC 123\",\n        photo: \"https://randomuser.me/api/portraits/men/1.jpg\",\n        eta: \"5 mins\"\n      };\n      setSelectedDriver(driver);\n      return driver;\n    } catch (error) {\n      setError(\"Failed to find a driver\");\n      return null;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const processPayment = async (amount, method) => {\n    setLoading(true);\n    try {\n      // Simulate payment processing\n      await new Promise(resolve => setTimeout(resolve, 2000));\n      setPaymentStatus(\"success\");\n      return true;\n    } catch (error) {\n      setError(\"Payment failed\");\n      setPaymentStatus(\"failed\");\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(RideContext.Provider, {\n    value: {\n      currentRide,\n      loading,\n      error,\n      requestRide,\n      cancelRide,\n      completeRide,\n      getRideHistory,\n      findDriver,\n      selectedDriver,\n      processPayment,\n      paymentStatus\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n};\n_s(RideProvider, \"566COyw+0ZZfJJM/2X6SlWRFMkM=\");\n_c = RideProvider;\nvar _c;\n$RefreshReg$(_c, \"RideProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","axios","AuthContext","jsxDEV","_jsxDEV","RideContext","RideProvider","children","_s","user","currentRide","setCurrentRide","selectedDriver","setSelectedDriver","paymentStatus","setPaymentStatus","loading","setLoading","error","setError","requestRide","rideData","response","post","process","env","REACT_APP_API_URL","headers","Authorization","token","data","_error$response","_error$response$data","message","cancelRide","rideId","localStorage","getItem","config","put","err","_err$response","_err$response$data","completeRide","rating","feedback","_err$response2","_err$response2$data","getRideHistory","res","get","_err$response3","_err$response3$data","findDriver","location","Promise","resolve","setTimeout","driver","id","name","car","plate","photo","eta","processPayment","amount","method","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/SIDDH/Desktop/Novaride/src/context/RideContext.js"],"sourcesContent":["import React, { createContext, useState, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { AuthContext } from \"./AuthContext\";\r\n\r\nexport const RideContext = createContext();\r\n\r\nexport const RideProvider = ({ children }) => {\r\n  const { user } = useContext(AuthContext);\r\n  const [currentRide, setCurrentRide] = useState(null);\r\n  const [selectedDriver, setSelectedDriver] = useState(null);\r\n  const [paymentStatus, setPaymentStatus] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const requestRide = async (rideData) => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/api/rides`,\r\n        rideData,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n      setCurrentRide(response.data);\r\n      return true;\r\n    } catch (error) {\r\n      setError(error.response?.data?.message || \"Failed to request ride\");\r\n      return false;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const cancelRide = async (rideId) => {\r\n    try {\r\n      setLoading(true);\r\n      const token = localStorage.getItem(\"token\");\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      };\r\n\r\n      await axios.put(\r\n        `${process.env.REACT_APP_API_URL}/api/rides/${rideId}/cancel`,\r\n        {},\r\n        config\r\n      );\r\n\r\n      setCurrentRide(null);\r\n      setError(null);\r\n      return true;\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || \"Failed to cancel ride\");\r\n      return false;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const completeRide = async (rideId, rating, feedback) => {\r\n    try {\r\n      setLoading(true);\r\n      const token = localStorage.getItem(\"token\");\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      };\r\n\r\n      await axios.put(\r\n        `${process.env.REACT_APP_API_URL}/api/rides/${rideId}/complete`,\r\n        { rating, feedback },\r\n        config\r\n      );\r\n\r\n      setCurrentRide(null);\r\n      setError(null);\r\n      return true;\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || \"Failed to complete ride\");\r\n      return false;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const getRideHistory = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const token = localStorage.getItem(\"token\");\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      };\r\n\r\n      const res = await axios.get(\r\n        `${process.env.REACT_APP_API_URL}/api/rides/history`,\r\n        config\r\n      );\r\n\r\n      setError(null);\r\n      return res.data;\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || \"Failed to fetch ride history\");\r\n      return [];\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const findDriver = async (location) => {\r\n    setLoading(true);\r\n    try {\r\n      // Simulate API call to find nearby drivers\r\n      await new Promise((resolve) => setTimeout(resolve, 2000));\r\n      const driver = {\r\n        id: 1,\r\n        name: \"Michael Smith\",\r\n        rating: 4.8,\r\n        car: \"Toyota Camry\",\r\n        plate: \"ABC 123\",\r\n        photo: \"https://randomuser.me/api/portraits/men/1.jpg\",\r\n        eta: \"5 mins\",\r\n      };\r\n      setSelectedDriver(driver);\r\n      return driver;\r\n    } catch (error) {\r\n      setError(\"Failed to find a driver\");\r\n      return null;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const processPayment = async (amount, method) => {\r\n    setLoading(true);\r\n    try {\r\n      // Simulate payment processing\r\n      await new Promise((resolve) => setTimeout(resolve, 2000));\r\n      setPaymentStatus(\"success\");\r\n      return true;\r\n    } catch (error) {\r\n      setError(\"Payment failed\");\r\n      setPaymentStatus(\"failed\");\r\n      return false;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <RideContext.Provider\r\n      value={{\r\n        currentRide,\r\n        loading,\r\n        error,\r\n        requestRide,\r\n        cancelRide,\r\n        completeRide,\r\n        getRideHistory,\r\n        findDriver,\r\n        selectedDriver,\r\n        processPayment,\r\n        paymentStatus,\r\n      }}\r\n    >\r\n      {children}\r\n    </RideContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}