{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SIDDH\\\\Desktop\\\\Novaride\\\\src\\\\components\\\\RideTracking\\\\RatingModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ModalOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.7);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n`;\n_c = ModalOverlay;\nconst ModalContent = styled.div`\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  width: 90%;\n  max-width: 500px;\n  text-align: center;\n`;\n_c2 = ModalContent;\nconst StarContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 1rem;\n  margin: 2rem 0;\n  font-size: 2rem;\n`;\n_c3 = StarContainer;\nconst Star = styled.span`\n  cursor: pointer;\n  color: ${props => props.filled ? \"#ffd700\" : \"#ddd\"};\n`;\n_c4 = Star;\nconst TextArea = styled.textarea`\n  width: 100%;\n  padding: 0.8rem;\n  margin: 1rem 0;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  min-height: 100px;\n`;\n_c5 = TextArea;\nconst Button = styled.button`\n  padding: 1rem 2rem;\n  background-color: #000;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 1rem;\n  margin-top: 1rem;\n\n  &:hover {\n    background-color: #333;\n  }\n`;\n_c6 = Button;\nfunction RatingModal({\n  driverInfo,\n  onClose\n}) {\n  _s();\n  const navigate = useNavigate();\n  const [rating, setRating] = useState(0);\n  const [feedback, setFeedback] = useState(\"\");\n  const handleSubmit = () => {\n    // Here you would typically send the rating to your backend\n    console.log(\"Rating submitted:\", {\n      rating,\n      feedback\n    });\n    onClose();\n    navigate(\"/\");\n  };\n  return /*#__PURE__*/_jsxDEV(ModalOverlay, {\n    children: /*#__PURE__*/_jsxDEV(ModalContent, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Rate Your Ride\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"How was your ride with \", driverInfo.name, \"?\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StarContainer, {\n        children: [1, 2, 3, 4, 5].map(star => /*#__PURE__*/_jsxDEV(Star, {\n          filled: star <= rating,\n          onClick: () => setRating(star),\n          children: \"\\u2605\"\n        }, star, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextArea, {\n        placeholder: \"Additional feedback (optional)\",\n        value: feedback,\n        onChange: e => setFeedback(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleSubmit,\n        children: \"Submit Rating\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(RatingModal, \"NWqLjaL2Fkv80zb7F7JG8EMxG18=\", false, function () {\n  return [useNavigate];\n});\n_c7 = RatingModal;\nexport default RatingModal;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"ModalOverlay\");\n$RefreshReg$(_c2, \"ModalContent\");\n$RefreshReg$(_c3, \"StarContainer\");\n$RefreshReg$(_c4, \"Star\");\n$RefreshReg$(_c5, \"TextArea\");\n$RefreshReg$(_c6, \"Button\");\n$RefreshReg$(_c7, \"RatingModal\");","map":{"version":3,"names":["React","useState","styled","useNavigate","jsxDEV","_jsxDEV","ModalOverlay","div","_c","ModalContent","_c2","StarContainer","_c3","Star","span","props","filled","_c4","TextArea","textarea","_c5","Button","button","_c6","RatingModal","driverInfo","onClose","_s","navigate","rating","setRating","feedback","setFeedback","handleSubmit","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","name","map","star","onClick","placeholder","value","onChange","e","target","_c7","$RefreshReg$"],"sources":["C:/Users/SIDDH/Desktop/Novaride/src/components/RideTracking/RatingModal.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst ModalOverlay = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background: rgba(0, 0, 0, 0.7);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 1000;\r\n`;\r\n\r\nconst ModalContent = styled.div`\r\n  background: white;\r\n  padding: 2rem;\r\n  border-radius: 8px;\r\n  width: 90%;\r\n  max-width: 500px;\r\n  text-align: center;\r\n`;\r\n\r\nconst StarContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 1rem;\r\n  margin: 2rem 0;\r\n  font-size: 2rem;\r\n`;\r\n\r\nconst Star = styled.span`\r\n  cursor: pointer;\r\n  color: ${(props) => (props.filled ? \"#ffd700\" : \"#ddd\")};\r\n`;\r\n\r\nconst TextArea = styled.textarea`\r\n  width: 100%;\r\n  padding: 0.8rem;\r\n  margin: 1rem 0;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  min-height: 100px;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  padding: 1rem 2rem;\r\n  background-color: #000;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-size: 1rem;\r\n  margin-top: 1rem;\r\n\r\n  &:hover {\r\n    background-color: #333;\r\n  }\r\n`;\r\n\r\nfunction RatingModal({ driverInfo, onClose }) {\r\n  const navigate = useNavigate();\r\n  const [rating, setRating] = useState(0);\r\n  const [feedback, setFeedback] = useState(\"\");\r\n\r\n  const handleSubmit = () => {\r\n    // Here you would typically send the rating to your backend\r\n    console.log(\"Rating submitted:\", { rating, feedback });\r\n    onClose();\r\n    navigate(\"/\");\r\n  };\r\n\r\n  return (\r\n    <ModalOverlay>\r\n      <ModalContent>\r\n        <h2>Rate Your Ride</h2>\r\n        <p>How was your ride with {driverInfo.name}?</p>\r\n\r\n        <StarContainer>\r\n          {[1, 2, 3, 4, 5].map((star) => (\r\n            <Star\r\n              key={star}\r\n              filled={star <= rating}\r\n              onClick={() => setRating(star)}\r\n            >\r\n              â˜…\r\n            </Star>\r\n          ))}\r\n        </StarContainer>\r\n\r\n        <TextArea\r\n          placeholder=\"Additional feedback (optional)\"\r\n          value={feedback}\r\n          onChange={(e) => setFeedback(e.target.value)}\r\n        />\r\n\r\n        <Button onClick={handleSubmit}>Submit Rating</Button>\r\n      </ModalContent>\r\n    </ModalOverlay>\r\n  );\r\n}\r\n\r\nexport default RatingModal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}