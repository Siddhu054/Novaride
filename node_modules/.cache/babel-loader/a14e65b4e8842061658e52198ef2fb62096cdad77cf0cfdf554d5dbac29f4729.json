{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SIDDH\\\\Desktop\\\\Novaride\\\\src\\\\components\\\\RideTracking\\\\ChatBox.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatContainer = styled.div`\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n  width: 300px;\n  background: white;\n  border-radius: 8px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  z-index: 1000;\n`;\n_c = ChatContainer;\nconst ChatHeader = styled.div`\n  padding: 1rem;\n  background: #000;\n  color: white;\n  border-radius: 8px 8px 0 0;\n  cursor: pointer;\n`;\n_c2 = ChatHeader;\nconst MessagesContainer = styled.div`\n  height: 300px;\n  overflow-y: auto;\n  padding: 1rem;\n  display: ${props => props.isOpen ? \"block\" : \"none\"};\n`;\n_c3 = MessagesContainer;\nconst MessageInput = styled.div`\n  padding: 1rem;\n  border-top: 1px solid #ddd;\n  display: ${props => props.isOpen ? \"flex\" : \"none\"};\n  gap: 0.5rem;\n\n  input {\n    flex: 1;\n    padding: 0.5rem;\n    border: 1px solid #ddd;\n    border-radius: 4px;\n  }\n\n  button {\n    padding: 0.5rem 1rem;\n    background: #000;\n    color: white;\n    border: none;\n    border-radius: 4px;\n    cursor: pointer;\n  }\n`;\n_c4 = MessageInput;\nconst Message = styled.div`\n  margin-bottom: 0.5rem;\n  padding: 0.5rem;\n  border-radius: 4px;\n  background: ${props => props.isUser ? \"#e3f2fd\" : \"#f5f5f5\"};\n  text-align: ${props => props.isUser ? \"right\" : \"left\"};\n`;\n_c5 = Message;\nfunction ChatBox({\n  socket,\n  driverInfo\n}) {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const messagesEndRef = useRef(null);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  useEffect(() => {\n    if (socket) {\n      socket.on(\"message\", msg => {\n        setMessages(prev => [...prev, {\n          text: msg,\n          isUser: false\n        }]);\n      });\n    }\n  }, [socket]);\n  const sendMessage = e => {\n    e.preventDefault();\n    if (message.trim() && socket) {\n      socket.emit(\"message\", message);\n      setMessages(prev => [...prev, {\n        text: message,\n        isUser: true\n      }]);\n      setMessage(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ChatContainer, {\n    children: [/*#__PURE__*/_jsxDEV(ChatHeader, {\n      onClick: () => setIsOpen(!isOpen),\n      children: [\"Chat with \", driverInfo.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MessagesContainer, {\n      isOpen: isOpen,\n      children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(Message, {\n        isUser: msg.isUser,\n        children: msg.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MessageInput, {\n      isOpen: isOpen,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        placeholder: \"Type a message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatBox, \"xOa0Pfxir9JOrolqAbS1/Uuaqew=\");\n_c6 = ChatBox;\nexport default ChatBox;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"ChatContainer\");\n$RefreshReg$(_c2, \"ChatHeader\");\n$RefreshReg$(_c3, \"MessagesContainer\");\n$RefreshReg$(_c4, \"MessageInput\");\n$RefreshReg$(_c5, \"Message\");\n$RefreshReg$(_c6, \"ChatBox\");","map":{"version":3,"names":["React","useState","useEffect","useRef","styled","jsxDEV","_jsxDEV","ChatContainer","div","_c","ChatHeader","_c2","MessagesContainer","props","isOpen","_c3","MessageInput","_c4","Message","isUser","_c5","ChatBox","socket","driverInfo","_s","setIsOpen","message","setMessage","messages","setMessages","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","on","msg","prev","text","sendMessage","e","preventDefault","trim","emit","children","onClick","name","fileName","_jsxFileName","lineNumber","columnNumber","map","index","ref","type","value","onChange","target","placeholder","_c6","$RefreshReg$"],"sources":["C:/Users/SIDDH/Desktop/Novaride/src/components/RideTracking/ChatBox.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ChatContainer = styled.div`\r\n  position: fixed;\r\n  bottom: 20px;\r\n  right: 20px;\r\n  width: 300px;\r\n  background: white;\r\n  border-radius: 8px;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n  z-index: 1000;\r\n`;\r\n\r\nconst ChatHeader = styled.div`\r\n  padding: 1rem;\r\n  background: #000;\r\n  color: white;\r\n  border-radius: 8px 8px 0 0;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst MessagesContainer = styled.div`\r\n  height: 300px;\r\n  overflow-y: auto;\r\n  padding: 1rem;\r\n  display: ${(props) => (props.isOpen ? \"block\" : \"none\")};\r\n`;\r\n\r\nconst MessageInput = styled.div`\r\n  padding: 1rem;\r\n  border-top: 1px solid #ddd;\r\n  display: ${(props) => (props.isOpen ? \"flex\" : \"none\")};\r\n  gap: 0.5rem;\r\n\r\n  input {\r\n    flex: 1;\r\n    padding: 0.5rem;\r\n    border: 1px solid #ddd;\r\n    border-radius: 4px;\r\n  }\r\n\r\n  button {\r\n    padding: 0.5rem 1rem;\r\n    background: #000;\r\n    color: white;\r\n    border: none;\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst Message = styled.div`\r\n  margin-bottom: 0.5rem;\r\n  padding: 0.5rem;\r\n  border-radius: 4px;\r\n  background: ${(props) => (props.isUser ? \"#e3f2fd\" : \"#f5f5f5\")};\r\n  text-align: ${(props) => (props.isUser ? \"right\" : \"left\")};\r\n`;\r\n\r\nfunction ChatBox({ socket, driverInfo }) {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n  const messagesEndRef = useRef(null);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  useEffect(() => {\r\n    if (socket) {\r\n      socket.on(\"message\", (msg) => {\r\n        setMessages((prev) => [...prev, { text: msg, isUser: false }]);\r\n      });\r\n    }\r\n  }, [socket]);\r\n\r\n  const sendMessage = (e) => {\r\n    e.preventDefault();\r\n    if (message.trim() && socket) {\r\n      socket.emit(\"message\", message);\r\n      setMessages((prev) => [...prev, { text: message, isUser: true }]);\r\n      setMessage(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ChatContainer>\r\n      <ChatHeader onClick={() => setIsOpen(!isOpen)}>\r\n        Chat with {driverInfo.name}\r\n      </ChatHeader>\r\n      <MessagesContainer isOpen={isOpen}>\r\n        {messages.map((msg, index) => (\r\n          <Message key={index} isUser={msg.isUser}>\r\n            {msg.text}\r\n          </Message>\r\n        ))}\r\n        <div ref={messagesEndRef} />\r\n      </MessagesContainer>\r\n      <MessageInput isOpen={isOpen}>\r\n        <input\r\n          type=\"text\"\r\n          value={message}\r\n          onChange={(e) => setMessage(e.target.value)}\r\n          placeholder=\"Type a message...\"\r\n        />\r\n        <button onClick={sendMessage}>Send</button>\r\n      </MessageInput>\r\n    </ChatContainer>\r\n  );\r\n}\r\n\r\nexport default ChatBox;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}