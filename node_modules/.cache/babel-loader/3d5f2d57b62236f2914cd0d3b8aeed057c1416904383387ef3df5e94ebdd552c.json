{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport { AuthContext } from \"../context/AuthContext\";\nexport const useRide = () => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const {\n    token\n  } = useContext(AuthContext);\n  const requestRide = async rideData => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await axios.post(`${process.env.REACT_APP_API_URL}/api/rides`, rideData, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return true;\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Failed to request ride\");\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n  return {\n    requestRide,\n    loading,\n    error\n  };\n};\n_s(useRide, \"Vwj82cuVt810XjSryTvmiS/XoA4=\");","map":{"version":3,"names":["useState","useContext","axios","AuthContext","useRide","_s","loading","setLoading","error","setError","token","requestRide","rideData","response","post","process","env","REACT_APP_API_URL","headers","Authorization","_error$response","_error$response$data","data","message"],"sources":["C:/Users/SIDDH/Desktop/Novaride/src/hooks/useRide.js"],"sourcesContent":["import { useState, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\n\r\nexport const useRide = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const { token } = useContext(AuthContext);\r\n\r\n  const requestRide = async (rideData) => {\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/api/rides`,\r\n        rideData,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n\r\n      return true;\r\n    } catch (error) {\r\n      setError(error.response?.data?.message || \"Failed to request ride\");\r\n      return false;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return {\r\n    requestRide,\r\n    loading,\r\n    error,\r\n  };\r\n};\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAC5C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,wBAAwB;AAEpD,OAAO,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM;IAAEU;EAAM,CAAC,GAAGT,UAAU,CAACE,WAAW,CAAC;EAEzC,MAAMQ,WAAW,GAAG,MAAOC,QAAQ,IAAK;IACtCL,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMX,KAAK,CAACY,IAAI,CAC/B,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,YAAY,EAC5CL,QAAQ,EACR;QACEM,OAAO,EAAE;UACPC,aAAa,EAAE,UAAUT,KAAK;QAChC;MACF,CACF,CAAC;MAED,OAAO,IAAI;IACb,CAAC,CAAC,OAAOF,KAAK,EAAE;MAAA,IAAAY,eAAA,EAAAC,oBAAA;MACdZ,QAAQ,CAAC,EAAAW,eAAA,GAAAZ,KAAK,CAACK,QAAQ,cAAAO,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBE,IAAI,cAAAD,oBAAA,uBAApBA,oBAAA,CAAsBE,OAAO,KAAI,wBAAwB,CAAC;MACnE,OAAO,KAAK;IACd,CAAC,SAAS;MACRhB,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,OAAO;IACLI,WAAW;IACXL,OAAO;IACPE;EACF,CAAC;AACH,CAAC;AAACH,EAAA,CAlCWD,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}